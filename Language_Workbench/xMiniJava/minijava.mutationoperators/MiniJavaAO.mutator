generate exhaustive mutants
in "data/out/"
from "data/model/"
metamodel "/MiniJavaMutation/data/model/XMiniJava.ecore"

with blocks {
	p2m "replaces plus with minus" {
		assignment = select one Assignment where {value is typed Plus}
		plus = select one Plus in assignment->value
		create Minus in assignment -> value with {left = plus->left, right = plus->right}
	}
	p2mu "replaces plus with multiplication" {
		assignment = select one Assignment where {value is typed Plus}
		plus = select one Plus in assignment->value
		create Multiplication in assignment->value with {left = plus->left, right = plus->right}
	}
	p2d "replaces plus with division" {
		assignment = select one Assignment where {value is typed Plus}
		plus = select one Plus in assignment->value
		create Division in assignment->value with {left = plus->left, right = plus->right}
	}
	m2p "replaces minus with plus" {
		assignment = select one Assignment where {value is typed Minus}
		minus = select one Minus in assignment->value
		create Plus in assignment->value with {left = minus->left, right = minus->right}
	}
	m2mu "replaces minus with multiplication" {
		assignment = select one Assignment where {value is typed Minus}
		minus = select one Minus in assignment->value
		create Multiplication in assignment->value with {left = minus->left, right = minus->right}
	}
	m2d "replaces minus with division" {
		assignment = select one Assignment where {value is typed Minus}
		minus = select one Minus in assignment->value
		create Division in assignment->value with {left = minus->left, right = minus->right}
	}
	mu2p "replaces multiplication with plus" {
		assignment = select one Assignment where {value is typed Multiplication}
		multi = select one Multiplication in assignment->value
		create Plus in assignment->value with {left = multi->left, right = multi->right}
	}
	mu2m "replaces multiplication with minus" {
		assignment = select one Assignment where {value is typed Multiplication}
		multi = select one Multiplication in assignment->value
		create Minus in assignment->value with {left = multi->left, right = multi->right}
	}
	mu2d "replaces multiplication with division" {
		assignment = select one Assignment where {value is typed Multiplication}
		multi = select one Multiplication in assignment->value
		create Division in assignment->value with {left = multi->left, right = multi->right}
	}
	d2p "replaces division with plus" {
		assignment = select one Assignment where {value is typed Division}
		div = select one Division in assignment->value
		create Plus in assignment->value with {left = div->left, right = div->right}
	}
	d2m "replaces division with minus" {
		assignment = select one Assignment where {value is typed Division}
		div = select one Division in assignment->value
		create Minus in assignment->value with {left = div->left, right = div->right}
	}
	d2mu "replaces division with multiplication" {
		assignment = select one Assignment where {value is typed Division}
		div = select one Division in assignment->value
		create Multiplication in assignment->value with {left = div->left, right = div->right}
	}
	a2o "replaces and with or" {
		assignment = select one Assignment where {value is typed And}
		ande = select one And in assignment->value
		create Or in assignment->value with {left = ande->left, right = ande->right}
	}
	o2a "replaces or with and" {
		assignment = select one Assignment where {value is typed Or}
		ore = select one Or in assignment->value
		create And in assignment->value with {left = ore->left, right = ore->right}
	}
	e2ie "replaces equality with inequality" {
		assignment = select one Assignment where {value is typed Equality}
		equale = select one Equality in assignment->value
		create Inequality in assignment->value with {left = equale->left, right = equale->right}
	}
	e2sue "replaces equality with superiorOrEqual" {
		assignment = select one Assignment where {value is typed Equality}
		equale = select one Equality in assignment->value
		create SuperiorOrEqual in assignment->value with {left = equale->left, right = equale->right}
	}
	e2ine "replaces equality with inferiorOrEqual" {
		assignment = select one Assignment where {value is typed Equality}
		equale = select one Equality in assignment->value
		create InferiorOrEqual in assignment->value with {left = equale->left, right = equale->right}
	}
	e2su "replaces equality with superior" {
		assignment = select one Assignment where {value is typed Equality}
		equale = select one Equality in assignment->value
		create Superior in assignment->value with {left = equale->left, right = equale->right}
	}
	e2in "replaces equality with inferior" {
		assignment = select one Assignment where {value is typed Equality}
		equale = select one Equality in assignment->value
		create Inferior in assignment->value with {left = equale->left, right = equale->right}
	}
	ie2e "replaces inequality with equality" {
		assignment = select one Assignment where {value is typed Inequality}
		inequale = select one Inequality in assignment->value
		create Equality in assignment->value with {left = inequale->left, right = inequale->right}
	}
	ie2sue "replaces inequality with SuperiorOrEqual" {
		assignment = select one Assignment where {value is typed Inequality}
		inequale = select one Inequality in assignment->value
		create SuperiorOrEqual in assignment->value with {left = inequale->left, right = inequale->right}
	}
	ie2ine "replaces inequality with InferiorOrEqual" {
		assignment = select one Assignment where {value is typed Inequality}
		inequale = select one Inequality in assignment->value
		create InferiorOrEqual in assignment->value with {left = inequale->left, right = inequale->right}
	}
	ie2su "replaces inequality with superior" {
		assignment = select one Assignment where {value is typed Inequality}
		inequale = select one Inequality in assignment->value
		create Superior in assignment->value with {left = inequale->left, right = inequale->right}
	}
	ie2in "replaces inequality with Inferior" {
		assignment = select one Assignment where {value is typed Inequality}
		inequale = select one Inequality in assignment->value
		create Inferior in assignment->value with {left = inequale->left, right = inequale->right}
	}
	sue2e "replaces superiorOrEqual with equality" {
		assignment = select one Assignment where {value is typed SuperiorOrEqual}
		sueq = select one SuperiorOrEqual in assignment->value
		create Equality in assignment->value with {left = sueq->left, right = sueq->right}
	}
	sue2ie "replaces superiorOrEqual with inEquality" {
		assignment = select one Assignment where {value is typed SuperiorOrEqual}
		sueq = select one SuperiorOrEqual in assignment->value
		create Inequality in assignment->value with {left = sueq->left, right = sueq->right}
	}
	sue2ine "replaces superiorOrEqual with InferiorOrEqual" {
		assignment = select one Assignment where {value is typed SuperiorOrEqual}
		sueq = select one SuperiorOrEqual in assignment->value
		create InferiorOrEqual in assignment->value with {left = sueq->left, right = sueq->right}
	}
	sue2su "replaces superiorOrEqual with superior" {
		assignment = select one Assignment where {value is typed SuperiorOrEqual}
		sueq = select one SuperiorOrEqual in assignment->value
		create Superior in assignment->value with {left = sueq->left, right = sueq->right}
	}
	sue2in "replaces superiorOrEqual with Inferior" {
		assignment = select one Assignment where {value is typed SuperiorOrEqual}
		sueq = select one SuperiorOrEqual in assignment->value
		create Inferior in assignment->value with {left = sueq->left, right = sueq->right}
	}
	ine2e "replaces inferiorOrEqual with equality" {
		assignment = select one Assignment where {value is typed InferiorOrEqual}
		ineq = select one InferiorOrEqual in assignment->value
		create Equality in assignment->value with {left = ineq->left, right = ineq->right}
	}
	ine2ie "replaces inferiorOrEqual with inEquality" {
		assignment = select one Assignment where {value is typed InferiorOrEqual}
		ineq = select one InferiorOrEqual in assignment->value
		create Inequality in assignment->value with {left = ineq->left, right = ineq->right}
	}
	ine2sue "replaces inferiorOrEqual with SuperiorOrEqual" {
		assignment = select one Assignment where {value is typed InferiorOrEqual}
		ineq = select one InferiorOrEqual in assignment->value
		create SuperiorOrEqual in assignment->value with {left = ineq->left, right = ineq->right}
	}
	ine2su "replaces inferiorOrEqual with superior" {
		assignment = select one Assignment where {value is typed InferiorOrEqual}
		ineq = select one InferiorOrEqual in assignment->value
		create Superior in assignment->value with {left = ineq->left, right = ineq->right}
	}
	ine2in "replaces inferiorOrEqual with inferior" {
		assignment = select one Assignment where {value is typed InferiorOrEqual}
		ineq = select one InferiorOrEqual in assignment->value
		create Inferior in assignment->value with {left = ineq->left, right = ineq->right}
	}
	su2e "replaces superior with equality" {
		assignment = select one Assignment where {value is typed Superior}
		supe = select one Superior in assignment->value
		create Equality in assignment->value with {left = supe->left, right = supe->right}
	}
	su2ie "replaces superior with inEquality" {
		assignment = select one Assignment where {value is typed Superior}
		supe = select one Superior in assignment->value
		create Inequality in assignment->value with {left = supe->left, right = supe->right}
	}
	su2sue "replaces superior with superiorOrEqual" {
		assignment = select one Assignment where {value is typed Superior}
		supe = select one Superior in assignment->value
		leftp = select one Expression in supe->left
		rightp = select one Expression in supe->right
		create SuperiorOrEqual in assignment->value with {left = leftp, right = rightp}
	}
	su2ine "replaces superior with inferiorOrEqual" {
		assignment = select one Assignment where {value is typed Superior}
		supe = select one Superior in assignment->value
		create InferiorOrEqual in assignment->value with {left = supe->left, right = supe->right}
	}
	su2in "replaces superior with inferior" {
		assignment = select one Assignment where {value is typed Superior}
		supe = select one Superior in assignment->value
		create Inferior in assignment->value with {left = supe->left, right = supe->right}
	}
	in2e "replaces inferior with equality" {
		assignment = select one Assignment where {value is typed Inferior}
		infe = select one Inferior in assignment->value
		create Equality in assignment->value with {left = infe->left, right = infe->right}
	}
	in2ie "replaces inferior with inEquality" {
		assignment = select one Assignment where {value is typed Inferior}
		infe = select one Inferior in assignment->value
		create Inequality in assignment->value with {left = infe->left, right = infe->right}
	}
	in2sue "replaces inferior with superiorOrEqual" {
		assignment = select one Assignment where {value is typed Inferior}
		infe = select one Inferior in assignment->value
		create SuperiorOrEqual in assignment->value with {left = infe->left, right = infe->right}
	}
	in2ine "replaces inferior with inferiorOrEqual" {
		assignment = select one Assignment where {value is typed Inferior}
		infe = select one Inferior in assignment->value
		create InferiorOrEqual in assignment->value with {left = infe->left, right = infe->right}
	}
	in2su "replaces inferior with superior" {
		assignment = select one Assignment where {value is typed Inferior}
		infe = select one Inferior in assignment->value
		create Superior in assignment->value with {left = infe->left, right = infe->right}
	}
}